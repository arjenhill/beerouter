{"version":3,"sources":["logo.svg","comp/Comp1.jsx","comp/Comp2.jsx","bee-router/Emitter.jsx","bee-router/BeeRouter.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Comp1","className","src","logo","alt","Comp2","style","backgroundColor","height","href","target","rel","_listeners","BeeRouterEmitter","on","type","listener","push","one","proxyListener","off","apply","arguments","arr","i","l","length","toString","splice","offAll","emit","eventName","ret","listeners","slice","args","Array","prototype","call","shift","handler","has","BeeRouter","props","state","show","first","RouterHash","add","this","path","setTimeout","hashListenerHandler","window","addEventListener","bind","hash","location","substr","fireHash","indexOf","setState","runIndex","index","display","component","React","Component","pathname","key","value","addQueryStringValueToPath","Math","random","currentHash","hashs","check","callback","clickHandler","item","App","console","log","onClick","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b52824cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport logo from \"../logo.svg\";\nimport \"./Comp.css\";\n\nfunction Comp1() {\n  return (\n    <div className=\"comp-con\">\n      <img src={logo} className=\"comp-logo animation\" alt=\"logo\" />\n      <p>这是第1个TAB</p>\n    </div>\n  );\n}\n\nexport default Comp1;\n","import React from \"react\";\nimport logo from \"../logo.svg\";\nimport \"./Comp.css\";\n\nfunction Comp2() {\n  return (\n    <div className=\"comp-con\" style={{ backgroundColor: \"#1a0020\" }}>\n      <img src={logo} className=\"comp-logo\" alt=\"logo\" style={{ height: \"30vmin\" }} />\n      <p>这是第2个TAB</p>\n      <a className=\"comp-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Learn React\n      </a>\n    </div>\n  );\n}\n\nexport default Comp2;\n","let _listeners = {};\n\nconst BeeRouterEmitter = {\n  on(type, listener) {\n    if (!_listeners[type]) _listeners[type] = [];\n    _listeners[type].push(listener);\n\n    return listener;\n  },\n\n  one(type, listener) {\n    BeeRouterEmitter.on(type, proxyListener);\n\n    function proxyListener() {\n      BeeRouterEmitter.off(type, proxyListener);\n      listener.apply(null, arguments);\n    }\n  },\n\n  off(type, listener) {\n    if (!_listeners || !_listeners[type]) return;\n\n    const arr = _listeners[type];\n    for (let i = 0, l = arr.length; i < l; i++) {\n      if (arr[i].toString() === listener.toString()) {\n        if (l === 1) {\n          delete _listeners[type];\n        } else {\n          arr.splice(i, 1);\n        }\n        break;\n      }\n    }\n  },\n\n  offAll(type) {\n    if (!type) _listeners = {};\n    else if (_listeners) delete _listeners[type];\n  },\n\n  emit(eventName) {\n    let ret = false,\n      listeners = _listeners;\n\n    if (eventName && listeners) {\n      let arr = listeners[eventName];\n      if (!arr) return ret;\n\n      arr = arr.slice();\n      let i = arr.length;\n\n      let args = Array.prototype.slice.call(arguments);\n      args.shift();\n\n      while (i--) {\n        let handler = arr[i];\n        ret = ret || handler.apply(null, args);\n      }\n    }\n\n    return !!ret;\n  },\n\n  has(type) {\n    const listeners = _listeners;\n    return !!(listeners && listeners[type]);\n  }\n};\n\nexport default BeeRouterEmitter;\n","////////////////////////////////////////////////////////////////////\n//\n//\n//   BeeRouter 控制 显示/隐藏(display:none/block) 的路由器\n//\n//\n////////////////////////////////////////////////////////////////////\n\nimport React from \"react\";\nimport BeeRouterEmitter from \"./Emitter.jsx\";\n\nexport default class BeeRouter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { show: false };\n    this.first = -1;\n  }\n\n  componentDidMount() {\n    // 添加默认path用于模糊查询.\n    RouterHash.add(this.props.path);\n\n    setTimeout(() => {\n      this.hashListenerHandler();\n    }, 250);\n    window.addEventListener(\"hashchange\", this.hashListenerHandler.bind(this));\n  }\n\n  hashListenerHandler() {\n    const hash = window.location.hash.substr(1);\n    fireHash.call(this, hash);\n\n    // 默认路由\n    RouterHash.runIndex(hash, () => {\n      if (this.props.index === \"default\") fireHash.call(this, true);\n    });\n\n    // 触发路由机制\n    function fireHash(hash) {\n      if (hash === true || hash.indexOf(this.props.path) === 0) {\n        this.first++;\n        this.setState({ show: true });\n\n        if (this.first === 0) {\n          BeeRouterEmitter.emit(\"router-show-first\", this.props.path);\n        }\n        BeeRouterEmitter.emit(\"router-change\", this.props.path);\n        return;\n      } else {\n        this.setState({ show: false });\n      }\n    }\n  }\n\n  render() {\n    const style = { display: this.state.show ? \"block\" : \"none\" };\n\n    return (\n      <span style={style}>\n        <this.props.component />\n      </span>\n    );\n  }\n}\n\nBeeRouter.push = function(pathname) {\n  const key = window.location.key || createRandomKey(6);\n  const QueryKey = \"_k\";\n\n  let path = pathname;\n  path = addQueryStringValueToPath(path, QueryKey, key);\n\n  if (this.currentHash !== path) {\n    window.location.hash = path;\n  }\n\n  this.currentHash = path;\n};\n\nfunction addQueryStringValueToPath(path, key, value) {\n  return path + (path.indexOf(\"?\") === -1 ? \"?\" : \"&\") + (key + \"=\" + value);\n}\n\nfunction createRandomKey(length) {\n  return Math.random()\n    .toString(36)\n    .substr(2, length);\n}\n\n////////////////////////////////////////////////////////////////////\n//\n//\n//   默认path用于模糊查询\n//\n//\n////////////////////////////////////////////////////////////////////\nlet RouterHash = {\n  hashs: [],\n  one: false,\n  add(path) {\n    this.hashs.push(path);\n  },\n\n  check(hash) {\n    let has = false;\n    for (let i = 0; i < this.hashs.length; i++) {\n      if (hash.indexOf(this.hashs[i]) === 0) {\n        has = true;\n      }\n    }\n\n    return has;\n  },\n\n  runIndex(hash, callback) {\n    if (!this.check(hash) && !this.one) {\n      callback();\n      this.one = true;\n      setTimeout(() => {\n        this.one = false;\n      }, 500);\n    }\n  }\n};\n","import React from \"react\";\nimport Comp1 from \"./comp/Comp1.jsx\";\nimport Comp2 from \"./comp/Comp2.jsx\";\nimport { BeeRouter, BeeRouterEmitter } from \"./bee-router\";\n\nfunction clickHandler(item) {\n  BeeRouter.push(\"/comp\" + item);\n}\n\nfunction App() {\n  BeeRouterEmitter.on(\"router-change\", path => {\n    console.log(path);\n  });\n\n  return (\n    <div className=\"App\">\n      <div className=\"nav\">\n        <div onClick={clickHandler.bind(null, 1)}>导航1</div>\n        <div onClick={clickHandler.bind(null, 2)}>导航2</div>\n      </div>\n\n      <div>\n        <BeeRouter path=\"/comp1\" component={Comp1} index=\"default\" />\n        <BeeRouter path=\"/comp2\" component={Comp2} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}